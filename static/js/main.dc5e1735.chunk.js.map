{"version":3,"sources":["reducers/twilio.js","reducers/index.js","components/contact.jsx","components/contactRow.jsx","components/contacts.jsx","components/loadSettings.jsx","actions/index.js","components/loadContacts.jsx","components/settings.jsx","components/start.jsx","components/stop.jsx","components/application.jsx","index.js"],"names":["getFirstCallPage","twilioSid","twilioToken","twilioNumber","start","Promise","resolve","reject","xhr","XMLHttpRequest","uri","encodeURIComponent","toISOString","open","setRequestHeader","window","btoa","onreadystatechange","readyState","DONE","status","json","JSON","parse","responseText","calls","List","next_page_uri","getNextCallPage","nextPageURI","existingCalls","concat","then","nextCalls","send","allCalls","startCall","dstNum","srcNum","audioURI","body","encodeURI","StartCall","state","idx","udx","TwilioSid","TwilioToken","TwilioNumbers","AudioURIs","sendSMS","twilioSID","twilioAuth","msg","StartSMS","ModeEnum","Object","freeze","initialState","Start","Date","Stop","Mode","idle","Cost","Numbers","Map","PreShowSMS","PostShowSMS","imported","sbState","num","callState","twilioData","State","Started","Update","preshow","DateCreated","QueueTime","Duration","Attempts","deltaS","newUpdate","newAttempts","PreShowWait","console","log","started","now","undefined","newDuration","duration","start_time","newStart","RedialWindow","redial","postshow","date_created","queue_time","deltaE","end_time","RedialWait","PostShowWait","finished","Contact","this","props","call","className","name","key","toFixed","React","Component","ContactRow","row","cols","numbers","items","i","size","col","get","push","Contacts","keySeq","groupBy","x","k","max","configured","connect","LoadSettings","id","type","accept","onChange","e","file","target","files","reader","FileReader","onload","re","dispatch","contents","result","readAsText","LoadContacts","Settings","house","elapsed","running","stopped","count","toString","StartPerformance","ready","onClick","StopPerformance","Application","twilioNumbers","all","map","n","value","reduce","acc","lis","callCost","price","parseFloat","callMap","el","to","set","interval","setInterval","setState","time","loadFromServer","clearInterval","store","createStore","action","data","ix","ux","csvData","fromJS","Papa","filter","a","b","c","startsWith","substring","m","v","length","newNumbers","hasFin","stop","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc5e1735.chunk.js","sourcesContent":["/*\n * Copyright (c) Clinton Freeman 2020\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n * associated documentation files (the \"Software\"), to deal in the Software without restriction,\n * including without limitation the rights to use, copy, modify, merge, publish, distribute,\n * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or\n * substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT\n * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { List } from 'immutable'\n\n/**************************************************************************************************\n *\n METHODS FOR GETTING CALL STATUS.\n *\n *************************************************************************************************/\nfunction getNextCallPage(twilioSid, twilioToken, nextPageURI, existingCalls) {\n\treturn new Promise((resolve, reject) => {\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open(\"GET\", 'https://api.twilio.com' + nextPageURI, true);\n\t\txhr.setRequestHeader(\"Authorization\", \"Basic \" + window.btoa(twilioSid + ':' + twilioToken));\n\n\t\txhr.onreadystatechange = function() {\n\t\t\tif(xhr.readyState === XMLHttpRequest.DONE && xhr.status === 200) {\n\n\t\t\t\tvar json = JSON.parse(xhr.responseText);\n\t\t\t\tvar calls = existingCalls.concat(List(json.calls));\n\n\t\t\t\tif (json.next_page_uri) {\n\t\t\t\t\tvar nextP = getNextCallPage(twilioSid, twilioToken, json.next_page_uri, calls);\n\t\t\t\t\tnextP.then(nextCalls => resolve(nextCalls));\n\t\t\t\t} else {\n\t\t\t\t\tresolve(calls);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\txhr.send();\n\t});\n}\n\nfunction getFirstCallPage(twilioSid, twilioToken, twilioNumber, start) {\n\treturn new Promise((resolve, reject) => {\n\t\tvar xhr = new XMLHttpRequest();\n\n\t\tvar uri = 'https://api.twilio.com/2010-04-01/Accounts/' + twilioSid +\n\t\t\t\t\t\t\t'/Calls.json?StartTime>=' + encodeURIComponent(start.toISOString()) +\n\t\t\t\t\t\t\t'&From=' + encodeURIComponent(twilioNumber) +\n\t\t\t\t\t\t\t'&PageSize=1000';\n\n\t\txhr.open(\"GET\",\n\t\t\t\t\t\t uri,\n\t\t\t\t\t\t true);\n\t\txhr.setRequestHeader(\"Authorization\", \"Basic \" + window.btoa(twilioSid + ':' + twilioToken));\n\n\t\txhr.onreadystatechange = function() {\n\t\t\tif(xhr.readyState === XMLHttpRequest.DONE && xhr.status === 200) {\n\n\t\t\t\tvar json = JSON.parse(xhr.responseText);\n\t\t\t\tvar calls = List(json.calls);\n\n\t\t\t\tif (json.next_page_uri) {\n\t\t\t\t\tvar nextP = getNextCallPage(twilioSid, twilioToken, json.next_page_uri, calls);\n\t\t\t\t\tnextP.then(allCalls => resolve(allCalls));\n\t\t\t\t} else {\n\t\t\t\t\tresolve(calls);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\txhr.send();\n\t});\n}\n\n// GetCalls returns a promise containing all the calls made from each of the twilio numbers after the\n// supplied start time.\nfunction GetCalls(twilioSid, twilioToken, twilioNumbers, start) {\n\treturn Promise.all(twilioNumbers.map(n => getFirstCallPage(twilioSid, twilioToken, n, start)))\n}\n\n\n/**************************************************************************************************\n *\n METHODS FOR STARTING CALLS.\n *\n *************************************************************************************************/\nfunction startCall(twilioSid, twilioToken, dstNum, srcNum, audioURI) {\n\tvar xhr = new XMLHttpRequest();\n\txhr.open(\t\"POST\",\n\t\t\t\t\t\t'https://api.twilio.com/2010-04-01/Accounts/' + twilioSid + '/Calls.json',\n\t\t\t\t\t\ttrue);\n\n\t// Set the HTTP request headers.\n\txhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n\txhr.setRequestHeader(\"Authorization\", \"Basic \" + window.btoa(twilioSid + ':' + twilioToken));\n\n\t// Callback that is triggered when the request is completed.\n\txhr.onreadystatechange = function() {\n\t\t\tif(xhr.readyState === XMLHttpRequest.DONE && xhr.status === 200) {\n\t\t\t\t// Request finished. Do processing here.\n\t\t\t}\n\t}\n\n\tvar body = 'To=' + dstNum + '&From=' + srcNum + '&Url=' + audioURI;\n\txhr.send(encodeURI(body));\n}\n\nfunction StartCall(state, dstNum, idx, udx) {\n\tstartCall(state.TwilioSid, state.TwilioToken, dstNum, state.TwilioNumbers[idx], state.AudioURIs[udx]);\n}\n\n// StartCalls starts a twilio phone call to each of the participant numbers listed in the state of the switchboard.\nfunction StartCalls(state) {\n\tstate.Numbers.map(function(v, k) {\n\t\tstartCall(state.TwilioSid, state.TwilioToken, k, state.TwilioNumbers[v.idx], state.AudioURIs[v.udx]);\n\t\treturn 0;\n\t})\n}\n\n\n/**************************************************************************************************\n *\n METHODS FOR SENDING SMS'.\n *\n *************************************************************************************************/\nfunction sendSMS(twilioSID, twilioAuth, dstNum, srcNum, msg) {\n\tvar xhr = new XMLHttpRequest();\n\txhr.open(\"POST\",\n           'https://api.twilio.com/2010-04-01/Accounts/' + twilioSID + '/Messages.json',\n           true);\n\n\t// Set the HTTP request headers.\n\txhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n\txhr.setRequestHeader(\"Authorization\", \"Basic \" + window.btoa(twilioSID + ':' + twilioAuth));\n\n\t// Callback that is triggered when the request is completed.\n\txhr.onreadystatechange = function() {\n\t\tif(xhr.readyState === XMLHttpRequest.DONE && xhr.status === 200) {\n\t\t\t// Request finished. Do processing here.\n\t\t}\n\t}\n\n\tvar body = 'To=' + dstNum + '&From=' + srcNum + '&Body=' + msg;\n\txhr.send(encodeURI(body));\n}\n\nfunction StartSMS(state, dstNum, idx, msg) {\n\tsendSMS(state.TwilioSid, state.TwilioToken, dstNum, state.TwilioNumbers[idx], msg);\n}\n\n// StartSMS sends the specified msg to each of the participant numbers listed in the state of the switchboard.\nfunction StartSMSs(state, msg) {\n\tstate.Numbers.map(function(v, k) {\n\t\tsendSMS(state.TwilioSid, state.TwilioToken, k, state.TwilioNumbers[v.idx], msg);\n\t\treturn 0;\n\t})\n}\n\nexport { GetCalls, StartCalls, StartSMSs, StartCall, StartSMS }","/*\n * Copyright (c) Clinton Freeman 2020\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n * associated documentation files (the \"Software\"), to deal in the Software without restriction,\n * including without limitation the rights to use, copy, modify, merge, publish, distribute,\n * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or\n * substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT\n * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { fromJS } from 'immutable'\nimport { Map } from 'immutable'\nimport  Papa  from 'papaparse'\nimport { StartCall, StartSMS } from './twilio.js'\n\n/**\n * TODO: Run the 100 person test.\n * TODO: Run the 250 person full show tech preview.\n *\n * TODO: Stick interface up on github pages.\n * TODO: Documentation for operator.\n *\n * TODO: Button on the card that allows an ended call be manually restarted by the operator.\n *\n * ~~TODO: Have all the timing geared around the start of the first call.~~\n * ~~TODO: Run overlapping show tests.~~\n * ~~FIX: Queue time not listed correctly.~~\n * ~~TODO: Tally up call cost and list it in the report.~~\n * ~~TODO: Test when loading bad numbers.~~\n * ~~TODO: Probably need to shift timing to a config file.~~\n * ~~TODO: Need a stop button that halts the update functionality of the show. Stop the show automatically when everyone has completed.~~\n * ~~TODO: Need a show clock. When the performance started and minutes elapsed.~~\n * ~~FIX: Limit callbacks to four.~~\n * ~~TODO: SMS 5 minutes after the end of the show.~~\n * ~~TODO: SMS 15 minutes before the show.~~\n * ~~TODO: Change the colour of the status card depending on the mode of the call.~~\n * ~~TODO: Show different call state when call is set to redial again.~~\n * ~~TODO: Within first 10 minutes, disconnected calls - re dial.~~\n * ~~TODO: If disconnect or no answer after 10 minutes - nothing.~~\n * ~~TODO: Make sure when we redial numbers, that we update our Numbers Map with only the most~~\n * ~~      recent call data returned in the search.~~\n * ~~TODO: Store the number and audio uri index in the state to reuse when calling.~~\n * ~~TODO: Update dashbaord with call status.~~\n * ~~TODO: Load numbers from Qtix csv file.~~\n * ~~TODO: Shift location of audio file to configuration file.~~\n * ~~TODO: Enumeration of switchboard state: idle, config, participants, running.~~\n * ~~TODO: Enumeration of participant state: imported, start-sms, twilio status, end-sms.~~\n */\n\nconst ModeEnum = Object.freeze({\"idle\":1, \"configured\":2, \"ready\":3, \"running\":4, \"stopped\": 5});\n\nconst initialState = {\n  Start: new Date(),\n  Stop: new Date(),\n  Mode: ModeEnum.idle,\n  Cost: 0.0,\n  Numbers:Map({}),\n  AudioURIs:[],\n  PreShowSMS: '',\n  PostShowSMS: '',\n  \"PreShowWait\" : 0,\t// 15 minutes after preshow sms - start call.\n\t\"RedialWindow\" : 0,\t// Redial people in the first 10 minutes of call.\n\t\"RedialWait\" : 0,\t\t// Wait 2 minutes before redialing.\n\t\"PostShowWait\" : 0,\t// Wait 5 minutes after the show ends to send postshow SMS.\n  TwilioSid:'',\n  TwilioToken:'',\n  TwilioNumbers:[]\n}\n\n\n\nfunction imported(sbState, num, callState, twilioData) {\n\tStartSMS(sbState, num, callState.idx, sbState.PreShowSMS);\n\n\treturn {\n\t\tState: callState.State,\n\t\tStarted: callState.Started,\n\t\tUpdate: preshow,\n\t\tDateCreated: callState.DateCreated,\n\t\tQueueTime: callState.QueueTime,\n\t\tDuration: callState.Duration,\n\t\tAttempts: callState.Attempts,\n\t\tidx: callState.idx,\n\t\tudx: callState.udx\n\t}\n}\n\nfunction preshow(sbState, num, callState, twilioData) {\n\tvar now = new Date();\n\tvar deltaS = (now - sbState.Start) / 60000.0;\n\n\t// Wait PreShowWait minutes the preshow SMS, then queue the call.\n\tvar newUpdate = callState.Update;\n\tvar newAttempts = callState.Attempts;\n\n\tif (deltaS > sbState.PreShowWait) {\n\t\tconsole.log(\"**StartCall**\");\n\t\tStartCall(sbState, num, callState.idx, callState.udx);\n\n\t\tnewUpdate = started;\n\t\tnewAttempts = 1;\n\t}\n\n\treturn {\n\t\tState: callState.state,\n\t\tStarted: callState.Started,\n\t\tUpdate: newUpdate,\n\t\tDateCreated: callState.DateCreated,\n\t\tQueueTime: callState.QueueTime,\n\t\tDuration: callState.Duration,\n\t\tAttempts: newAttempts,\n\t\tidx: callState.idx,\n\t\tudx: callState.udx\n\t};\n}\n\nfunction started(sbState, num, callState, twilioData) {\n\tvar now = new Date();\n\n\tif (twilioData === undefined) {\n\t\treturn callState;\n\t}\n\n\t// Update the duration of the call.\n\tvar newDuration = twilioData.duration / 60.0;\n\tif (twilioData.status === 'in-progress') {\n\t\tnewDuration = (now - new Date(twilioData.start_time)) / 60000.0;\n\t}\n\n\t// If the call has ended - we need to change the update function.\n\tvar newStart = callState.Started;\n\tvar newUpdate = callState.Update;\n\tif (twilioData.status === 'completed' ||\n\t\t\ttwilioData.status === 'failed' ||\n\t\t\ttwilioData.status === 'busy' ||\n\t\t\ttwilioData.status === 'no-answer') {\n\n\t\tif (newStart === undefined) {\n\t\t\tnewStart = new Date(twilioData.start_time);\n\t\t}\n\n\t\tvar deltaS = (now - newStart) / 60000.0;\n\t\tif (deltaS < sbState.RedialWindow && callState.Attempts < 4) {\n\t\t\tnewUpdate = redial;\n\n\t\t} else {\n\t\t\tnewUpdate = postshow;\n\t\t}\n\t}\n\n\treturn {\n\t\tState: twilioData.status,\n\t\tStarted: newStart,\n\t\tUpdate: newUpdate,\n\t\tDateCreated: twilioData.date_created,\n\t\tQueueTime: twilioData.queue_time / 1000.0,\n\t\tDuration: newDuration,\n\t\tAttempts: callState.Attempts,\n\t\tidx: callState.idx,\n\t\tudx: callState.udx\n\t};\n}\n\nfunction redial(sbState, num, callState, twilioData) {\n\tvar now = new Date();\n\tvar deltaE = (now - new Date(twilioData.end_time)) / 60000.0;\n\n\tif (twilioData === undefined) {\n\t\treturn callState;\n\t}\n\n\t// Wait RedialWait before redialing the call.\n\tvar newUpdate = callState.Update\n\tvar newAttempts = callState.Attempts;\n\tif (deltaE > sbState.RedialWait) {\n\t\tconsole.log(\"**StartCall**\");\n\t\tStartCall(sbState, num, callState.idx, callState.udx);\n\t\tnewUpdate = started;\n\t\tnewAttempts = newAttempts + 1;\n\t}\n\n\treturn {\n\t\tState: twilioData.status,\n\t\tStarted: callState.Started,\n\t\tUpdate: newUpdate,\n\t\tDateCreated: twilioData.date_created,\n\t\tQueueTime: twilioData.queue_time / 1000.0,\n\t\tDuration: twilioData.duration / 60.0,\n\t\tAttempts: newAttempts,\n\t\tidx: callState.idx,\n\t\tudx: callState.udx\n\t};\n}\n\nfunction postshow(sbState, num, callState, twilioData) {\n\tvar now = new Date();\n\tvar deltaE = (now - new Date(twilioData.end_time)) / 60000.0;\n\n\tif (twilioData === undefined) {\n\t\treturn callState;\n\t}\n\n\tvar newUpdate = callState.Update\n\tif (deltaE > sbState.PostShowWait) {\n\t\tconsole.log(\"**StartSMS**\");\n\t\tStartSMS(sbState, num, callState.idx, sbState.PostShowSMS);\n\t\tnewUpdate = finished;\n\t}\n\n\treturn {\n\t\tState: twilioData.status,\n\t\tStarted: callState.Started,\n\t\tUpdate: newUpdate,\n\t\tDateCreated: twilioData.date_created,\n\t\tQueueTime: twilioData.queue_time / 1000.0,\n\t\tDuration: twilioData.duration / 60.0,\n\t\tAttempts: callState.Attempts,\n\t\tidx: callState.idx,\n\t\tudx: callState.udx\n\t};\n}\n\nfunction finished(sbState, num, callState, twilioData) {\n\treturn callState;\n}\n\nfunction Switchboard(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase 'LOAD_SETTINGS':\n\t\t\tconsole.log(\"LOAD SETTINGS\");\n\t\t\tvar data = JSON.parse(action.contents);\n\n\t\t\treturn {\n\t\t\t\tStart: state.Start,\n\t\t\t\tStop: state.Stop,\n\t\t\t\tMode: ModeEnum.configured,\n\t\t\t\tCost: state.Cost,\n\t\t\t\tNumbers: state.Numbers,\n\t\t\t\tAudioURIs: data.AudioURIs,\n\t\t\t\tPreShowSMS: data.PreShowSMS,\n\t\t\t\tPostShowSMS: data.PostShowSMS,\n\t\t\t\tPreShowWait : data.PreShowWait,\n\t\t\t\tRedialWindow : data.RedialWindow,\n\t\t\t\tRedialWait : data.RedialWait,\n\t\t\t\tPostShowWait : data.PostShowWait,\n\t\t\t\tTwilioSid: data.TwilioSid,\n\t\t\t\tTwilioToken: data.TwilioToken,\n\t\t\t\tTwilioNumbers: data.TwilioNumbers\n\t\t\t};\n\n\t\tcase 'LOAD_CONTACTS':\n\t\t\tconsole.log(\"LOAD CONTACTS\");\n\n\t\t\tvar ix = 0;\n\t\t\tvar ux = 0;\n\n\t\t\tvar csvData = fromJS(Papa.parse(action.contents).data);\n\t\t\tvar numbers = csvData.filter(a => a.get(14) !== \"\") \t\t\t\t\t\t// Filter entries without numbers.\n\t\t\t\t\t\t\t\t\t\t.map(b => b.get(14)) \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Discard all the other data except for the numbers.\n\t\t\t\t\t\t\t\t\t\t.map(c => {\tif (c.startsWith(\"0\")) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\treturn \"+61\"+c.substring(1);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\treturn \"+\"+c;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t}})\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Make sure the numbers are prefixed with +61\n\t\t\t\t\t\t\t\t\t\t.reduce((m, v) => {\n\t\t\t\t\t\t\t\t\t\t\tix = (ix + 1) % state.TwilioNumbers.length;\n\t\t\t\t\t\t\t\t\t\t\tux = (ux + 1) % state.AudioURIs.length;\n\n\t\t\t\t\t\t\t\t\t\t\treturn m.set(v, {\n\t\t\t\t\t\t\t\t\t\t\t\t\tState: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\tStarted: undefined,\n\t\t\t\t\t\t\t\t\t\t\t\t\tUpdate: imported,\n\t\t\t\t\t\t\t\t\t\t\t\t\tDateCreated: new Date(),\n\t\t\t\t\t\t\t\t\t\t\t\t\tQueueTime: 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\tDuration: 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\tAttempts: 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\tidx: ix,\n\t\t\t\t\t\t\t\t\t\t\t\t\tudx: ux\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t} , Map());\t// Make a Map of call state with the number as the key.\n\n\t\t\treturn {\n\t\t\t\tStart: state.Start,\n\t\t\t\tStop: state.Stop,\n\t\t\t\tMode: ModeEnum.ready,\n\t\t\t\tCost: state.Cost,\n\t\t\t\tNumbers: numbers,\n\t\t\t\tAudioURIs: state.AudioURIs,\n\t\t\t\tPreShowSMS: state.PreShowSMS,\n\t\t\t\tPostShowSMS: state.PostShowSMS,\n\t\t\t\tPreShowWait : state.PreShowWait,\n\t\t\t\tRedialWindow : state.RedialWindow,\n\t\t\t\tRedialWait : state.RedialWait,\n\t\t\t\tPostShowWait : state.PostShowWait,\n\t\t\t\tTwilioSid: state.TwilioSid,\n\t\t\t\tTwilioToken: state.TwilioToken,\n\t\t\t\tTwilioNumbers: state.TwilioNumbers\n\t\t\t};\n\n\t\tcase 'START_PERFORMANCE':\n\t\t\tconsole.log(\"START PERFORMANCE\");\n\n\t\t\treturn {\n\t\t\t\tStart: new Date(),\n\t\t\t\tStop: state.Stop,\n\t\t\t\tMode: ModeEnum.running,\n\t\t\t\tCost: state.Cost,\n\t\t\t\tNumbers: state.Numbers,\n\t\t\t\tAudioURIs: state.AudioURIs,\n\t\t\t\tPreShowSMS: state.PreShowSMS,\n\t\t\t\tPostShowSMS: state.PostShowSMS,\n\t\t\t\tPreShowWait : state.PreShowWait,\n\t\t\t\tRedialWindow : state.RedialWindow,\n\t\t\t\tRedialWait : state.RedialWait,\n\t\t\t\tPostShowWait : state.PostShowWait,\n\t\t\t\tTwilioSid: state.TwilioSid,\n\t\t\t\tTwilioToken: state.TwilioToken,\n\t\t\t\tTwilioNumbers: state.TwilioNumbers\n\t\t\t};\n\n\t\tcase 'STOP_PERFORMANCE':\n\t\t\tconsole.log(\"STOP PERFORMANCE\");\n\n\t\t\treturn {\n\t\t\t\tStart: state.Start,\n\t\t\t\tStop: new Date(),\n\t\t\t\tMode: ModeEnum.stopped,\n\t\t\t\tCost: state.Cost,\n\t\t\t\tNumbers: state.Numbers,\n\t\t\t\tAudioURIs: state.AudioURIs,\n\t\t\t\tPreShowSMS: state.PreShowSMS,\n\t\t\t\tPostShowSMS: state.PostShowSMS,\n\t\t\t\tPreShowWait : state.PreShowWait,\n\t\t\t\tRedialWindow : state.RedialWindow,\n\t\t\t\tRedialWait : state.RedialWait,\n\t\t\t\tPostShowWait : state.PostShowWait,\n\t\t\t\tTwilioSid: state.TwilioSid,\n\t\t\t\tTwilioToken: state.TwilioToken,\n\t\t\t\tTwilioNumbers: state.TwilioNumbers\n\t\t\t};\n\n\t\tcase 'UPDATE_STATE':\n\t\t\tif (state.Mode !== ModeEnum.running) {\n\t\t\t\treturn {\n\t\t\t\t\tStart: state.Start,\n\t\t\t\t\tStop: state.Stop,\n\t\t\t\t\tMode: state.Mode,\n\t\t\t\t\tCost: action.contents[1],\n\t\t\t\t\tNumbers: state.Numbers,\n\t\t\t\t\tAudioURIs: state.AudioURIs,\n\t\t\t\t\tPreShowSMS: state.PreShowSMS,\n\t\t\t\t\tPostShowSMS: state.PostShowSMS,\n\t\t\t\t\tPreShowWait : state.PreShowWait,\n\t\t\t\t\tRedialWindow : state.RedialWindow,\n\t\t\t\t\tRedialWait : state.RedialWait,\n\t\t\t\t\tPostShowWait : state.PostShowWait,\n\t\t\t\t\tTwilioSid: state.TwilioSid,\n\t\t\t\t\tTwilioToken: state.TwilioToken,\n\t\t\t\t\tTwilioNumbers: state.TwilioNumbers\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar newNumbers = state.Numbers.map((v, k) => {\n\t\t\t\treturn v.Update(state, k, v, action.contents[0].get(k));\n\t\t\t});\n\n\t\t\tvar hasFin = newNumbers.filter(v => v.Update === finished);\n\t\t\tvar stop = hasFin.count() === newNumbers.count();\n\n\t\t\treturn {\n\t\t\t\tStart: state.Start,\n\t\t\t\tStop: stop ? new Date() : state.Stop,\n\t\t\t\tMode: stop ? ModeEnum.stopped : state.Mode,\n\t\t\t\tCost: action.contents[1],\n\t\t\t\tNumbers: newNumbers,\n\t\t\t\tAudioURIs: state.AudioURIs,\n\t\t\t\tPreShowSMS: state.PreShowSMS,\n\t\t\t\tPostShowSMS: state.PostShowSMS,\n\t\t\t\tPreShowWait : state.PreShowWait,\n\t\t\t\tRedialWindow : state.RedialWindow,\n\t\t\t\tRedialWait : state.RedialWait,\n\t\t\t\tPostShowWait : state.PostShowWait,\n\t\t\t\tTwilioSid: state.TwilioSid,\n\t\t\t\tTwilioToken: state.TwilioToken,\n\t\t\t\tTwilioNumbers: state.TwilioNumbers\n\t\t\t};\n\n\t\tdefault:\n\t\t\tconsole.log(\"DEFAULT\");\n\t\t\treturn state;\n\t}\n}\n\nexport { Switchboard, ModeEnum }","/*\n * Copyright (c) Clinton Freeman 2020\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n * associated documentation files (the \"Software\"), to deal in the Software without restriction,\n * including without limitation the rights to use, copy, modify, merge, publish, distribute,\n * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or\n * substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT\n * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport React from 'react';\n\n\nclass Contact extends React.Component {\n\trender() {\n\t\tvar num = this.props.num;\n\t\tvar call = this.props.call;\n\n\t\treturn (\n\t\t\t<div className={\"pure-u-1-5 card \" + call.Update.name + \" \" + call.State} key={num}>\n\t\t\t\t<p>&nbsp;{num} ({call.Update.name})</p>\n\t\t\t\t<p className=\"cardDetail\">&nbsp;D:{call.Duration.toFixed(2)}m Q:{call.QueueTime.toFixed(1)}s T:{call.Attempts} {call.State}</p>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Contact","/*\n * Copyright (c) Clinton Freeman 2020\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n * associated documentation files (the \"Software\"), to deal in the Software without restriction,\n * including without limitation the rights to use, copy, modify, merge, publish, distribute,\n * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or\n * substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT\n * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport React from 'react';\nimport Contact from './contact'\n\n\nclass ContactRow extends React.Component {\n\trender() {\n\t\tvar row = this.props.row;\n\t\tvar cols = this.props.cols;\n\t\tvar numbers = this.props.numbers;\n\n\t\tvar items = []\n\t\tvar i = 0\n\t\tfor (i = 0; i < cols.size; i++) {\n\t\t\tvar col = cols.get(i);\n\t\t\tvar contact = col.get(row);\n\t\t\tif (contact) {\n\t\t\t\titems.push(<Contact key={col.get(row)} num={col.get(row)} call={numbers.get(col.get(row))}/>)\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"pure-g\">{items}</div>\n\t\t)\n\t}\n}\n\nexport default ContactRow","/*\n * Copyright (c) Clinton Freeman 2020\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n * associated documentation files (the \"Software\"), to deal in the Software without restriction,\n * including without limitation the rights to use, copy, modify, merge, publish, distribute,\n * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or\n * substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT\n * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { connect } from 'react-redux'\nimport React from 'react'\nimport { ModeEnum } from '../reducers/index.js'\nimport ContactRow from './contactRow'\n\n\nclass Contacts extends React.Component {\n\trender() {\n\t\tconst { state } = this.props;\n\n\t\tconst items = []\n\t\tvar cols = state.Numbers.keySeq().groupBy((x, k) => k % 5);\n\t\tif (cols.size > 0) {\n\t\t\tvar max = cols.get(0).size;\n\n\t\t\tvar i = 0\n\t\t\tfor (i = 0; i < max; i++) {\n\t\t\t\titems.push(<ContactRow key={\"row\"+i} numbers={state.Numbers} cols={cols} row={i}/>)\n\t\t\t}\n\t\t}\n\n\t\treturn(\n\t\t\t<div className={state.Mode === ModeEnum.idle || state.Mode === ModeEnum.configured?\"hidden\":\"\"}>\n\t\t\t  <h2>Contacts: </h2>\n\t\t\t  {items}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tstate: state\n})\n\nexport default connect(mapStateToProps)(Contacts);","/*\n * Copyright (c) Clinton Freeman 2020\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n * associated documentation files (the \"Software\"), to deal in the Software without restriction,\n * including without limitation the rights to use, copy, modify, merge, publish, distribute,\n * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or\n * substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT\n * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { loadSettings } from '../actions/index.js'\nimport { ModeEnum } from '../reducers/index.js'\n\n\nclass LoadSettings extends React.Component {\n\trender() {\n\t\tconst { state } = this.props;\n\n\t\treturn (\n\t\t\t<button className={state.Mode === ModeEnum.idle?\"fileUpload pure-button pure-button-primary\":\"hidden\"}>\n\t\t\t<span>Load Settings</span>\n\t\t\t<input id=\"settings-file\" className=\"upload\" type=\"file\" accept=\".json\" onChange={e => {\n\t\t\t\tvar file = e.target.files[0];\n\t\t\t\tif (!file) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\treader.onload = re => {\n\t\t\t\t\tthis.props.dispatch(loadSettings(re.target.result))\n\t\t\t\t}\n\t\t\t\treader.readAsText(file);\n\t\t\t}}  />\n\t\t\t</button>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tstate: state\n})\n\nexport default connect(mapStateToProps)(LoadSettings)","export const loadSettings = contents => ({\n\ttype: 'LOAD_SETTINGS',\n\tcontents\n})\n\nexport const loadContacts = contents => ({\n\ttype: 'LOAD_CONTACTS',\n\tcontents\n})\n\nexport const updateState = contents => ({\n\ttype: 'UPDATE_STATE',\n\tcontents\n})\n\nexport const startPerformance = contents => ({\n\ttype: 'START_PERFORMANCE',\n\tcontents\n})\n\nexport const stopPerformance = contents => ({\n\ttype: 'STOP_PERFORMANCE',\n\tcontents\n})","/*\n * Copyright (c) Clinton Freeman 2020\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n * associated documentation files (the \"Software\"), to deal in the Software without restriction,\n * including without limitation the rights to use, copy, modify, merge, publish, distribute,\n * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or\n * substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT\n * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { loadContacts } from '../actions/index.js'\nimport { ModeEnum } from '../reducers/index.js'\n\n\nclass LoadContacts extends React.Component {\n\trender() {\n\t\tconst { state } = this.props;\n\n\t\treturn (\n\t\t\t<div className={state.Mode === ModeEnum.configured?\"fileUpload button-secondary pure-button\":\"hidden\"}>\n\t\t\t<span>Load Contacts</span>\n\t\t\t<input id=\"settings-file\" className=\"upload\" type=\"file\" accept=\".csv,.CSV\" onChange={e => {\n\t\t\t\tvar file = e.target.files[0];\n\t\t\t\tif (!file) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\treader.onload = re => {\n\t\t\t\t\tthis.props.dispatch(loadContacts(re.target.result))\n\t\t\t\t}\n\t\t\t\treader.readAsText(file);\n\t\t\t\t}}\t/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tstate: state\n})\n\nexport default connect(mapStateToProps)(LoadContacts)","/*\n * Copyright (c) Clinton Freeman 2020\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n * associated documentation files (the \"Software\"), to deal in the Software without restriction,\n * including without limitation the rights to use, copy, modify, merge, publish, distribute,\n * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or\n * substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT\n * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { connect } from 'react-redux'\nimport React from 'react';\nimport { ModeEnum } from '../reducers/index.js'\n\n\nclass Settings extends React.Component {\n\trender() {\n\t\tconst { state } = this.props;\n\n\t\tvar start = \"\";\n\t\tvar house = \"\";\n\t\tvar elapsed = \"\";\n\t\tif (state.Mode === ModeEnum.running ||\n\t\t\t  state.Mode === ModeEnum.stopped) {\n\t\t\thouse = \"House: \" + state.Numbers.count();\n\t\t\tstart = \"Start: \" + state.Start;\n\t\t}\n\n\t\tif (state.Mode === ModeEnum.running) {\n\t\t\telapsed = \"Elapsed: \" + ((new Date() - state.Start) / 60000.0).toFixed(2) + \"min\";\n\t\t} else if (state.Mode === ModeEnum.stopped) {\n\t\t\telapsed = \"Elapsed: \" + ((state.Stop - state.Start) / 60000.0).toFixed(2) + \"min\";\n\t\t}\n\n\t\treturn(\n\t\t\t<div className={state.Mode !== ModeEnum.idle? \"settings\" : \"hidden\"}>\n\t\t\t\t<p>TwilioNumbers: {state.TwilioNumbers.toString()}<br />{house}<br />{start}<br />{elapsed}<br />State Machine:{-state.Cost.toFixed(2)}</p>\n\t\t\t</div>);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tstate: state\n})\n\nexport default connect(mapStateToProps)(Settings);","/*\n * Copyright (c) Clinton Freeman 2020\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n * associated documentation files (the \"Software\"), to deal in the Software without restriction,\n * including without limitation the rights to use, copy, modify, merge, publish, distribute,\n * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or\n * substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT\n * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport React from 'react';\nimport { startPerformance } from '../actions/index.js'\nimport { ModeEnum } from '../reducers/index.js'\nimport { connect } from 'react-redux'\n\n\nclass StartPerformance extends React.Component {\n\trender() {\n\t\tconst { state } = this.props;\n\n\t\treturn(\n\t\t\t<button className={state.Mode === ModeEnum.ready?\"pure-button pure-button-primary add\":\"hidden\"}\n\t\t\t\t\t\t\tonClick={e => {this.props.dispatch(startPerformance())}}>\n\t\t\t\tStart Performance\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tstate: state\n})\n\nexport default connect(mapStateToProps)(StartPerformance)","/*\n * Copyright (c) Clinton Freeman 2020\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n * associated documentation files (the \"Software\"), to deal in the Software without restriction,\n * including without limitation the rights to use, copy, modify, merge, publish, distribute,\n * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or\n * substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT\n * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport React from 'react';\nimport { stopPerformance } from '../actions/index.js'\nimport { ModeEnum } from '../reducers/index.js'\nimport { connect } from 'react-redux'\n\n\nclass StopPerformance extends React.Component {\n\trender() {\n\t\tconst { state } = this.props;\n\n\t\treturn(\n\t\t\t<button className={state.Mode === ModeEnum.running?\"pure-button button-error add\":\"hidden\"}\n\t\t\t\t\t\t\tonClick={e => {this.props.dispatch(stopPerformance())}}>\n\t\t\t\tStop Performance\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tstate: state\n})\n\nexport default connect(mapStateToProps)(StopPerformance)","/*\n * Copyright (c) Clinton Freeman 2020\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n * associated documentation files (the \"Software\"), to deal in the Software without restriction,\n * including without limitation the rights to use, copy, modify, merge, publish, distribute,\n * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or\n * substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT\n * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { connect } from 'react-redux'\nimport React from 'react';\nimport Contacts from './contacts'\nimport LoadSettings from './loadSettings'\nimport LoadContacts from './loadContacts'\nimport Settings from './settings'\nimport StartPerformance from './start'\nimport StopPerformance from './stop'\nimport { updateState } from '../actions/index.js'\nimport { GetCalls } from '../reducers/twilio.js'\nimport { List } from 'immutable'\nimport { Map } from 'immutable'\n\n\nclass Application extends React.Component {\n\n\tloadFromServer() {\n\t\tconst { state } = this.props;\n\n\t\tif (state.TwilioSid !== '' && state.TwilioToken !== '') {\n\t\t\tvar callPromise = GetCalls(state.TwilioSid,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t state.TwilioToken,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t state.TwilioNumbers,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t state.Start);\n\n\t\t\tcallPromise.then((value) => {\n\n\t\t\t\t// We get a promise for each twilio number passed into GetCalls. Combine\n\t\t\t\t// all the results and dispatch them to update the state of the switchboard.\n\t\t\t\tvar allCalls = value.reduce((acc, lis) => {\n\t\t\t\t\treturn acc.concat(lis);\n\t\t\t\t}, List())\n\n\t\t\t\tvar callCost = allCalls.reduce((acc, lis) => {\n\t\t\t\t\tif (lis.price) {\n\t\t\t\t\t\treturn acc + parseFloat(lis.price);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn acc + 0.0;\n\t\t\t\t\t}\n\t\t\t\t}, 0.0);\n\n\t\t\t\tvar callMap = allCalls.reduce((acc, lis) => {\n\t\t\t\t\tvar el = acc.get(lis.to);\n\t\t\t\t\tif (el === undefined || lis.date_created >= el.DateCreated) {\n\t\t\t\t\t\treturn acc.set(lis.to, lis);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn acc;\n\n\t\t\t\t}, Map())\n\n\t\t\t\tthis.props.dispatch(updateState([callMap, callCost]));\n\t\t\t});\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.interval = setInterval(() => {this.setState({ time: Date.now() }); this.loadFromServer()}, 2000);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.interval);\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<div className=\"pure-g\">\n\t\t\t\t<div className=\"pure-u-1-1\">\n\t\t\t\t\t<h1>Red Light Switchboard</h1>\n\t\t\t\t\t<Settings />\n\t\t\t\t\t<fieldset className=\"pure-form\">\n\t\t\t\t\t\t<LoadSettings />\n\t\t\t\t\t\t<LoadContacts />\n\t\t\t\t\t\t<StartPerformance />\n\t\t\t\t\t\t<StopPerformance />\n\t\t\t\t\t</fieldset>\n\n\t\t\t\t\t<Contacts />\n\t\t\t\t</div>\n\t\t\t</div>);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tstate: state\n})\n\nexport default connect(mapStateToProps)(Application);","/*\n * Copyright (c) Clinton Freeman 2020\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n * associated documentation files (the \"Software\"), to deal in the Software without restriction,\n * including without limitation the rights to use, copy, modify, merge, publish, distribute,\n * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or\n * substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT\n * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nimport React from 'react'\nimport { render } from 'react-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport { Switchboard } from './reducers/index.js'\nimport Application from './components/application.jsx'\n\nconst store = createStore(Switchboard)\n\nrender(\n\t<Provider store={store}>\n\t\t<Application />\n\t</Provider>,\n\tdocument.getElementById('root')\n)"],"sourceRoot":""}